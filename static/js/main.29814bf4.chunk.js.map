{"version":3,"sources":["Hello.js","Search.js","Inc.js","Card.js","CardList.js","list.js","Scroll.js","App.js","serviceWorker.js","index.js"],"names":["Hello","className","src","alt","style","color","search","searchChange","value","onChange","type","placeholder","Inc","add","remove","onClick","e","Card","id","name","email","price","process","CardList","list","addtocart","map","user","i","key","mail","Scroll","props","overflow","border","height","children","App","IcreamentVlaue","event","setState","count","state","DecreamentVlaue","onSearchChange","searchfield","target","listItem","this","filter","el","toLocaleLowerCase","includes","Search","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qOAgBeA,G,MAdD,WACV,OACI,6BACI,yBAAKC,UAAU,eACX,yBAAKC,IAAI,kCACLD,UAAU,mBAAmBE,IAAI,YAGzC,wBAAIC,MAAO,CAAEC,MAAO,SAAWJ,UAAU,oCAAzC,aACA,wBAAIG,MAAO,CAAEC,MAAO,SAAWJ,UAAU,iCAAzC,wBCMGK,EAdD,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,aAAaC,EAAW,EAAXA,MAEzB,OACI,yBAAKP,UAAU,YACX,2BAAOQ,SAAUF,EACjBN,UAAU,cACTS,KAAK,SACLC,YAAY,SACZ,uBAAGP,MAAO,CAACC,MAAM,UAAjB,QAAiCG,KCa/BI,EAtBL,SAAC,GAAgB,IAAfC,EAAc,EAAdA,IAAIC,EAAU,EAAVA,OAEP,OAII,6BACI,8BAAM,4BAASC,QAAS,SAACC,GAAD,OAAKH,EAAIG,KAA3B,KAA0C,4BAASD,QAAS,SAACC,GAAD,OAAKF,EAAOE,KAA9B,QCuBlDC,EA3BH,SAAC,GAAoC,EAAnCC,GAAoC,IAAjCC,EAAgC,EAAhCA,KAAKC,EAA2B,EAA3BA,MAAMC,EAAqB,EAArBA,MAAMR,EAAe,EAAfA,IAAIC,EAAW,EAAXA,OAElC,OAMc,yBAAKb,UAAU,2EAEb,yBAAKC,IAAKoB,2BAAyCnB,IAAI,MAEvD,6BACQ,8BAAOgB,EAAP,SAAmBE,GACnB,6BACA,kBAAC,EAAD,CAAKR,IAAKA,EAAKC,OAAQA,KAGvB,4BAAQb,UAAU,mBAAmBc,QAAS,SAACC,GAAD,OAAKH,EAAIG,KAAvD,eACD,2BAAII,MCShBG,EA1BC,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,KAAKC,EAA2B,EAA3BA,UAAUX,EAAiB,EAAjBA,OAAON,EAAU,EAAVA,MAEpC,OACQ,6BAEIgB,EAAKE,KAAI,SAACC,EAAKC,GAEf,OAAO,6BACP,kBAAC,EAAD,CAAOC,IAAKD,EAEZV,GAAIM,EAAKI,GAAGV,GACZC,KAAMK,EAAKI,GAAGT,KACdC,MAAOI,EAAKI,GAAGR,MACfC,MAAOG,EAAKI,GAAGP,MACfR,IAAKY,EACLX,OAAQA,EACRN,MAAOA,UCQRgB,EA7BF,CACT,CACIN,GAAG,EACHC,KAAK,WACLW,KAAK,MACLT,MAAM,MAGV,CACIH,GAAG,EACHC,KAAK,WACLW,KAAK,MACLT,MAAM,MAEV,CACIH,GAAG,EACHC,KAAK,QACLW,KAAK,MACLT,MAAM,MAEV,CACIH,GAAG,EACHC,KAAK,OACLW,KAAK,MACLT,MAAM,MCfCU,EATD,SAACC,GACX,OAEE,yBAAK5B,MAAO,CAAC6B,SAAS,SAASC,OAAO,kBAAmBC,OAAO,UACxDH,EAAMI,WCwDLC,E,YAhDb,aAAc,IAAD,8BACX,+CAOJC,eAAgB,SAACC,GACb,EAAKC,SAAS,CAACC,MAAM,EAAKC,MAAMD,MAAM,KAT3B,EAYfE,gBAAiB,WACb,EAAKH,SAAS,CAACC,MAAM,EAAKC,MAAMD,MAAM,KAb3B,EAuBZG,eAAgB,SAACL,GACd,EAAKC,SAAS,CAACK,YAAYN,EAAMO,OAAOtC,SAtB1C,EAAKkC,MAAM,CACPD,MAAM,EACNjB,KAAKA,EACLqB,YAAY,IALL,E,sEA0BH,IAAD,OAECE,EAAWC,KAAKN,MAAMlB,KAAKyB,QAAO,SAAAC,GACtC,OAAOA,EAAG/B,KAAKgC,oBAAoBC,SAAS,EAAKV,MAAMG,YAAYM,wBAE9D,OACE,yBAAKlD,UAAU,gBACb,yBAAKA,UAAU,MAEZ,kBAAC,EAAD,MAAS,6BAEV,kBAACoD,EAAD,CAAQ9C,aAAcyC,KAAKJ,eAAgBpC,MAAOwC,KAAKN,MAAMD,QAC9D,kBAAC,EAAD,KACC,kBAAC,EAAD,CAAUjB,KAAMuB,EAAUtB,UAAWuB,KAAKV,eAAgBxB,OAAQkC,KAAKL,gBAAiBnC,MAAOwC,KAAKN,MAAMD,e,GAzC3Ga,aCAEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCRNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.29814bf4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Hello = () =>{\r\n    return(\r\n        <div>\r\n            <div className=\"pa4 tc grow\">\r\n                <img src=\"http://tachyons.io/img/logo.jpg\"\r\n                    className=\"br-100 h3 w3 dib\" alt=\"avatar\"/>\r\n            </div>\r\n            \r\n            <h2 style={{ color: \"black\"} } className='tc mt2 mb0 baskerville i fw1 f1 '>happyshop</h2>\r\n            <h2 style={{ color: \"white\"} } className=\"mt2 mb0 f6 fw4 ttu tracked bb\">Your amazing shop</h2>\r\n   \r\n        </div>\r\n    );\r\n}\r\nexport default Hello;","import React from 'react'\r\n// import Icon from 'react-native-ionicons';\r\n\r\nconst search =({searchChange,value}) => {\r\n    \r\n    return(\r\n        <div className='bg-black'>\r\n            <input onChange={searchChange} \r\n            className=\"tc br2 w-40\"\r\n             type=\"search\" \r\n             placeholder=\"item\"/>\r\n             <p style={{color:\"white\"}}>cart:{value}</p>\r\n             {/* <Text>Ionicons Icons</Text>\r\n            <Icon name='md-bicycle' /> */}\r\n        </div>\r\n    );\r\n}\r\nexport default search;","import React from 'react';\r\n\r\nconst Inc=({add,remove})=>{\r\n    \r\n         return(\r\n        // countIncrease=()=>{\r\n            // const value= this.state.count===0? 'zero':this.state.count;\r\n  \r\n             <div>\r\n                 <span><button  onClick={(e)=>add(e)} >+</button><button  onClick={(e)=>remove(e)}>-</button></span>\r\n                 {/* <p>{value}</p><button  className=\"badge badge-secondary badge-lg m-2\" onClick={this.IcreamentVlaue}>+</button><button  className=\"badge badge-secondary\"onClick={this.DecreamentVlaue}>-</button> */}\r\n                \r\n             </div>\r\n        );\r\n    \r\n\r\n   \r\n    \r\n    \r\n}\r\n//  function value(event){\r\n//     let c\r\n//     return c=c+1;\r\n// }\r\nexport default Inc;","import React from 'react';\r\nimport Inc from './Inc';\r\n// import list from './list';\r\n\r\n\r\nconst Card =({id,name,email,price,add,remove}) =>{\r\n    //  const {name,email,price}=list;\r\n    return(\r\n               \r\n        \r\n                    // <div className='bg-light-green dib br3 ma2 grow bw2 shadow-5'>\r\n                    //         <img alt='robots' src={`https://robohash.org/${id}?50*50`} />\r\n            \r\n                  <div className=\"bg-light-gray grow dib ma2 shadow-5  br2 bw2 mv4 w-100  mw5  mr4 center\">\r\n                   \r\n                    <img src={process.env.PUBLIC_URL+\"/images/t.jpeg\"} alt=\"i\"/> \r\n                      {/* <img src={`https://source.unsplash.com/${id}`} alt=\"pic\"/>  */}\r\n                    <div>\r\n                            <span>{name}   rs.{price}</span>\r\n                            <div>\r\n                            <Inc add={add} remove={remove}/> \r\n                            </div>\r\n                           \r\n                            <button className=\"bg-orange btn-lg\" onClick={(e)=>add(e)}>Add to Cart</button>   \r\n                           <p>{email}</p>\r\n                           \r\n                    </div> \r\n                \r\n            </div>\r\n               \r\n    );\r\n}\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n// import Inc from './Inc';\r\n// import list from './list';\r\n\r\n\r\n\r\nconst CardList =({list,addtocart,remove,value}) =>{\r\n  \r\n    return(\r\n            <div>\r\n            {\r\n                list.map((user,i)=>{\r\n\r\n                return <div>\r\n                <Card  key={i}\r\n                \r\n                id={list[i].id}\r\n                name={list[i].name}\r\n                email={list[i].email}\r\n                price={list[i].price}\r\n                add={addtocart}\r\n                remove={remove}\r\n                value={value}/>\r\n               \r\n               \r\n                </div> \r\n                })\r\n\r\n            }\r\n            </div>\r\n    );\r\n}\r\nexport default CardList;\r\n","\r\n\r\nconst list = [\r\n    {\r\n        id:1,\r\n        name:\"roadstar\",\r\n        mail:\"edf\",\r\n        price:25000\r\n\r\n    },\r\n    {\r\n        id:2,\r\n        name:\"rajmahal\",\r\n        mail:\"grt\",\r\n        price:42000\r\n    },\r\n    {\r\n        id:3,\r\n        name:\"kamal\",\r\n        mail:\"grt\",\r\n        price:4500\r\n    },\r\n    {\r\n        id:4,\r\n        name:\"nike\",\r\n        mail:\"grt\",\r\n        price:10000\r\n    }\r\n]\r\n   \r\n\r\nexport default list;","import React from 'react';\r\n\r\nconst Scroll =(props) =>{\r\n    return(\r\n  \r\n      <div style={{overflow:'scroll',border:'5px solid black', height:'400px'}}>\r\n             {props.children}\r\n      </div>\r\n    \r\n    );\r\n}\r\nexport default Scroll;","import React,{Component} from 'react';\n\nimport './App.css';\nimport Hello from './Hello';\nimport Search from './Search';\nimport CardList from './CardList';\nimport list from './list';\nimport Scroll from './Scroll';\n\n\n\n\nclass App extends Component{\n\n  constructor(){\n    super()\n    this.state={\n        count:0,\n        list:list,\n        searchfield:''\n    }\n}\nIcreamentVlaue =(event)=>{\n    this.setState({count:this.state.count+1});\n}\n\nDecreamentVlaue =()=>{\n    this.setState({count:this.state.count-1});\n}\n\n  \n  //  componentDidMount(){\n  //    fetch('http://jsonplaceholder.typicode.com/users')\n  //    .then(response=> response.json())\n  //    .then(users => {this.setState({list :users})});\n  //  }\n \n   onSearchChange =(event)=>{\n      this.setState({searchfield:event.target.value})\n    }\n   render(){\n     \n      const listItem = this.state.list.filter(el=>{\n        return el.name.toLocaleLowerCase().includes(this.state.searchfield.toLocaleLowerCase())});\n     \n             return (\n               <div className=\"bg-dark-gray\">\n                 <div className='tc'>\n                    \n                    <Hello /><br></br>\n                    {/* <p>{this.state.count}</p> */}\n                   <Search searchChange={this.onSearchChange} value={this.state.count}  />\n                  <Scroll>\n                   <CardList list={listItem} addtocart={this.IcreamentVlaue} remove={this.DecreamentVlaue} value={this.state.count} />\n                  </Scroll>\n                 </div>\n               </div>\n                   \n             );  \n \n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport 'bootstrap/dist/css/bootstrap.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}